module less_than(
    input [31:0] a,
    input [31:0] b,
    output [31:0] res
);
wire [31:0] subtract_result;
wire [31:0] b_negated;
wire subtract_cout;
wire lt; // This wire will carry the single bit result

// Negate b
not_32 (.res(b_negated), .a(b));

// Perform subtraction a - b using an adder
// Since we are using the adder for subtraction, we set cin to 1
adder subtractor(
  .a(a),
  .b(b_negated),
  .cin(1'b1),
  .sum(subtract_result),
  .cout(subtract_cout)
);

// The MSB of the subtract result indicates if a < b
// If MSB is 1, then a < b (in two's complement representation)
buf lt_buf(lt, subtract_result[31]);

or_operation or_lt(
    .a(lt),
    .b(1'b0),
    .res(res)
);

endmodule
