module mux8to1(
	input [7:0] d, // 8 data inputs
	input [2:0] sel, // 3-bit select signal
	output y // output
);
wire [7:0] not_sel;
wire [7:0] and_out;

// Invert the select lines
not not0(not_sel[0], sel[0]);
not not1(not_sel[1], sel[1]);
not not2(not_sel[2], sel[2]);

// AND gates for each input
and and0(and_out[0], d[0], not_sel[2], not_sel[1], not_sel[0]);
and and1(and_out[1], d[1], not_sel[2], not_sel[1], sel[0]);
and and2(and_out[2], d[2], not_sel[2], sel[1], not_sel[0]);
and and3(and_out[3], d[3], not_sel[2], sel[1], sel[0]);
and and4(and_out[4], d[4], sel[2], not_sel[1], not_sel[0]);
and and5(and_out[5], d[5], sel[2], not_sel[1], sel[0]);
and and6(and_out[6], d[6], sel[2], sel[1], not_sel[0]);
and and7(and_out[7], d[7], sel[2], sel[1], sel[0]);

// OR gates to combine the outputs
wire or_out1, or_out2, or_out3, or_out4;

or or0(or_out1, and_out[0], and_out[1], and_out[2], and_out[3]);
or or1(or_out2, and_out[4], and_out[5], and_out[6], and_out[7]);
or or2(y, or_out1, or_out2);

endmodule
