`timescale 1ns / 1ps

module alu_tb;

// Testbench-scope signal declarations
reg clk;
reg reset;
reg start;
reg [31:0] a;
reg [31:0] b;
reg [2:0] aluop;
wire [31:0] result;
wire done;

// Instantiate the ALU module
alu dut(
    .clk(clk),
    .reset(reset),
    .start(start),
    .a(a),
    .b(b),
    .aluop(aluop),
    .result(result),
    .done(done)
);

// Clock generation
initial begin
    clk = 0;
    forever #5 clk = ~clk; // Generate a clock with period of 10ns
end

// Test sequence
initial begin
    reset = 1;
    start = 0;
    a = 0;
    b = 0;
    aluop = 3'b000;
    #10; // Wait for reset

    reset = 0; // Release reset

    // Test AND operation
    a = 32'hA5A5A5A5;
    b = 32'h5A5A5A5A;
    aluop = 3'b000; // AND operation code
    #10; // Wait for operation to complete
    $display("AND Result: %h", result);

    // Test OR operation
    aluop = 3'b001; // OR operation code
    #10; // Wait for operation to complete
    $display("OR Result: %h", result);

    // Continue with other operations and their respective aluop codes...

    // Finish the test
    #100 $finish;
end

endmodule
