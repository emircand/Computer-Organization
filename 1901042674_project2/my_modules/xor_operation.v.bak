module xor_operation(
    input [31:0] a,
    input [31:0] b,
    output [31:0] result
);
xor r0( result[0], a[0], b[0]);
xor r1( result[1], a[1], b[1]);
xor r2( result[2], a[2], b[2]);
xor r3( result[3], a[3], b[3]);
xor r4( result[4], a[4], b[4]);
xor r5( result[5], a[5], b[5]);
xor r6( result[6], a[6], b[6]);
xor r7( result[7], a[7], b[7]);
xor r8( result[8], a[8], b[8]);
xor r9( result[9], a[9], b[9]);
xor r10(result[10], a[10], b[10]);
xor r11(result[11], a[11], b[11]);
xor r12(result[12], a[12], b[12]);
xor r13(result[13], a[13], b[13]);
xor r14(result[14], a[14], b[14]);
xor r15(result[15], a[15], b[15]);
xor r16(result[16], a[16], b[16]);
xor r17(result[17], a[17], b[17]);
xor r18(result[18], a[18], b[18]);
xor r19(result[19], a[19], b[19]);
xor r20(result[20], a[20], b[20]);
xor r21(result[21], a[21], b[21]);
xor r22(result[22], a[22], b[22]);
xor r23(result[23], a[23], b[23]);
xor r24(result[24], a[24], b[24]);
xor r25(result[25], a[25], b[25]);
xor r26(result[26], a[26], b[26]);
xor r27(result[27], a[27], b[27]);
xor r28(result[28], a[28], b[28]);
xor r29(result[29], a[29], b[29]);
xor r30(result[30], a[30], b[30]);
xor r31(result[31], a[31], b[31]);
endmodule
