`timescale 1ns / 1ps

module mod_tb;

// Testbench variables
reg clk;
reg rst;
reg start;
reg [31:0] A;
reg [31:0] B;
wire [31:0] RESULT;
wire done;

// Instantiate the module under test (MUT)
mod mut(
    .clk(clk),
    .rst(rst),
    .start(start),
    .A(A),
    .B(B),
    .RESULT(RESULT),
    .done(done)
);

// Clock generation
initial begin
    clk = 0;
    forever #5 clk = ~clk; // Generate a clock with a period of 10 time units
end

// Test sequence
initial begin
    // Initialize inputs
    rst = 1; start = 0; A = 0; B = 0;
    
    // Reset the system
    #10;
    rst = 0;

    // Apply test values
    @(negedge clk) start = 1; A = 50; B = 7;
    @(negedge clk) start = 0; // Start should be pulsed

    // Wait for the operation to complete
    wait(done == 1);
    @(negedge clk);

    // Check the result
    if (RESULT != 50 % 7) begin
        $display("Test failed: Incorrect result. Expected %d, got %d", 50 % 7, RESULT);
    end else begin
        $display("Test passed: Correct result. Expected %d, got %d", 50 % 7, RESULT);
    end
    
    // Insert additional test cases as needed
    
    // Finish the simulation
    #100;
    $finish;
end

endmodule
